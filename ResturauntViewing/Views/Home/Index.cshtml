
@using ResturauntViewing.Models.Models;
@using ResturauntViewing.Models.ViewComponents;
//{using System.Web.Mvc.Html}

@{
    //    ViewData["Title"] = "Home Page";
    int count = 0;
    int[] myArr = new int[8];
    int index = 0;
    int length = 0;


// Obisidian Link to discussing project with questions. Or maybe add it to the solution.
}
@model Product
@addTagHelper *, ResturauntViewing
<div class="text-center">
    <h1 id="50" class="display-4">Welcome</h1>

    @* <input style="width: 15%" autofocus="autofocus" maxlength="1" runat="server" oninput="focusfunc(this.id,this.value)" type="number" name=val1 class="text-hide" id=n0>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p> *@
    <ol>
         @using (Html.BeginForm("Index", "Home", FormMethod.Post)) // this was redirecting when the button was clicked I think
        { 
    <dt class="col-sm-12">
        <button id="button1" runat="server" ClientIDMode="Static" value="1" name="val">1  List</button>
            <button type="Submit" value="2" name="val">2 Lists</button>
            <button type="Submit" value="3" name="val">Manual</button>
           @*  @Html.TextBoxFor(model => model.price)
           <p>@Model.price</p>
           <p>@ViewData["Message"]</p> *@

          
    </dt>
    <dt class="col-sm-12">
            @Html.TextBoxFor(model => model.price)
        <p>@Model.price</p>
        <p>@ViewData["Message"]</p>


    </dt>

        } 
    
    </ol>
    @{
        string btnMessage = "";
    }
    @if ((int)ViewData["num"] >= 1 && (int)ViewData["num"] <3)
    {
        btnMessage = "Sort one list";
        @await Component.InvokeAsync("People",1)
        @if ((int)ViewData["num"] == 1)
        {
            <button id="btnSort" disabled="true" onclick="Submit()">@btnMessage</button>
            <button>Search</button>
        }
        @if ((int)ViewData["num"] == 2)
        {
            btnMessage = "Sort Two lists";
            @await Component.InvokeAsync("People", 2)
            <button id="btnSort" disabled="true" onclick="Submit()">@btnMessage</button>
        }
       
    }
    
   
    @if ((int)ViewData["num"] == 3)
    {
        btnMessage = "Sort";
        @await Component.InvokeAsync("SampleList")
        <button disabled="true" id="btnSearch">Search</button>
    }
    
    
</div>
@* <vc:People></vc:People> *@


       
@section Scripts {

    <script type="text/javascript">
        var count = 1; // perform op on number then cast back to string
        var objList = []
        var listSub = {}
        var sortedIndex
        var unsortedIndex
        //var arr = [];
        var inputs = document.querySelectorAll('input[type=number]')
        //alert(inputs.length)
        var arr
        var arr2
        if (inputs.length <= 6) {
           // alert("once") when does javascript rerun?
             arr = new Array(inputs.length).fill(null);
        }
           if (inputs.length > 6) {
            // alert("twice")
            //alert(inputs.length)
             arr = new Array(inputs.length-6).fill(null);
             arr2 = new Array(inputs.length - 6).fill(null); // or inputs
         }
        

        function StoreList(myList,index){
        //     var arr = []
        //   var object = {
        //       index : myList
           
        // }

        // arr.push(object)
        // if(arr.length == 2){
        //  var output = arr.shift()
            
       // }
        }
        
        
      
        //alert(arr2.length)

        function SubmitSample(){
             if(objList.length == 1){
               //alert("error: select unsorted list")
               $.get('/List/Sort', $.param({ data:  objList[0].list}, true), function (data) { })
                }
            else{ // theres both
                   $.post('/DoubleList/Sort', $.param({ data: objList[0].list, data2: objList[1].list }, true), function (data) { });
            }
            }

            function checkboxChange(checkbox,inList){
                //alert('arrived')
                if(checkbox.checked == true){
                    if(objList.length == 2){
                       var output = objList.shift()             // https://stackoverflow.com/questions/34622414/fifo-behavior-for-array-pop-in-javascript
                      var uncheckedBox = document.querySelector("#"+output.id)
                      uncheckedBox.checked = false;
                    }
                    var object = {
                        "list": inList,
                         "id": checkbox.id
                    }
                    objList.push(object)
                }else{
                    var index = objList.findIndex(e => e.id == checkbox.id)
                     objList.splice(index, 1);
                   //var output = objList.remove  // need to have else to remove element from array.
                }
                
                if(objList.length > 0){
                     if(document.querySelector("#submitSample")){
                      document.querySelector("#submitSample").disabled = false;
                       document.querySelector("#btnSearch").disabled = false;
                     }
                        if(objList.length == 2){
                             document.querySelector("#btnSearch").disabled = true;
                          }

                 }else{
                     if(document.querySelector("#submitSample")){
                       document.querySelector("#submitSample").disabled = true;
                        
                       
                      }
                
                //alert(checkedList)
            }
            }

              
        
        function focusfunc(id,val) { // reason is this needs to be outside document.ready 2. also dont put id 
            //alert(val)
            // its this problem
            //alert(val.length)
             var disabled = false;
            var exists = true;
           // alert(typeof(val))
            var objwhicharray = {

            }
            var index = id.substring(1);
            index = parseInt(index) -1;
            //var index = id.charAt(1) - 1
            if (index < 6) {
                //alert("one")
                arr[index] = val;
              
            } else {
                //alert("two")
                arr2[index - 6] = val;
                //alert(arr2)
            }
            //alert(arr)
              
              var arr1Contains = arr.some(x => x != null && x  !=''); // https://stackoverflow.com/questions/74065121/if-array-contains-different-type-elements-how-to-pick-the-same-type-elements-an
              arr2Contains = false;
              if(arr2){
                    arr2Contains = arr2.some(x => x != null && x  !='');
                    if(arr1Contains == false || arr2Contains == false){ // meaning empty
                     disabled = true;
                 }

                
              }else{
                   if(arr1Contains == false){
                       disabled = true;
                   }
              }
               var btnSort = document.querySelector("#btnSort")
               btnSort.disabled = disabled
              
               
            // alert(arr.length)
            //alert(arr2.length)
            
            // if((arr.length || arr2.length > 0) && !(arr.length > 0 && arr2.length > 0) ){
            //     alert("the condition is true")
            // }
           
        }
        $(document).ready(function () {
            
            
          

            
           
            //var num = inputs.length()
            
        var activeEl = document.querySelector("#n" + count); // doesnt work why? var acitveEl = document.getElementById(count);//

         
           

        })

           function NewActiveElement(id,val) {
                // remove then add....
               // alert(id)
              // alert(val)
            if (!val) {
                
                return;
            }
            var index = id.substring(1);
            index = parseInt(index) + 1;
               //alert(index);
                var activeEl = document.querySelector("#n" + index).focus();
                //inactiveEl.removeEventListener()
               // alert(newActiveEl)
                activeEl.focus();
                // changed onkeypress to onkeyup that works
                // declare variables outside in order to watch them.
                var eval;
                // activeEl.onkeyup = function (e) { // event listener added to the DOM independent of the variable https://stackoverflow.com/questions/44006915/overwriting-variables-after-adding-event-listener
                //   //  alert("Key Press")
                //      eval = e.key;
                    
                //     //arr.splice(e.id, 0, e.val)
                //     //e.preventDefault(); // https://stackoverflow.com/questions/44930159/how-do-i-refocus-on-an-input-field-after-tabbing-past-the-last-one
                //     count++;
                //    activeEl = document.querySelector("#n" + count);
                //     //activeEl.focus();
                //     NewActiveElement(activeEl)
                // };
                
            }
            // if(activeEl ){
            //     //alert("If statement")
            //     NewActiveElement(activeEl)
            // }
          
            

            


            
            // const btn = document.getElementById("button1");
            // btn.addEventListener("click", function () {
        
            // })
       

        function Submit() { // seems like these not available when in document ready maybe cause when initializing the elements you need function available before whole form loads
            alert(arr)
                alert(arr2)
        //     $.ajax({ // https://stackoverflow.com/questions/5489461/pass-array-to-mvc-action-via-ajax
        //         url: "ListController/Sort",
        //         traditional: true,
        //         data: { 'arrayOfValues': arr }
        //     });
        // }
            if (arr2) {
                //https://stackoverflow.com/questions/61928927/how-to-send-two-arrays-as-post-request-parameters-from-ajax-to-mvc-controller-a
                $.post('/DoubleList/Sort', $.param({ data: arr, data2: arr2 }, true), function (data) { });
                 // Dont put controller in the name; Needs to be list in the controller to work.
            } else {
                $.get('/List/Sort', $.param({ data: arr }, true), function (data) { }) // Dont put controller in the name; Needs to be list in the controller to work.
            }
            // https://stackoverflow.com/questions/5489461/pass-array-to-mvc-action-via-ajax
           
        }

        // https://stackoverflow.com/questions/15154261/how-can-i-set-an-event-listener-to-listen-to-a-text-box-from-the-html-source-cod
        // https://stackoverflow.com/questions/5897122/how-to-access-dom-elements-by-type-similar-to-getelementsbyname/5897207
      
        

        // for (i = 0; i < inputs.length; i++) {
        //     inputs[i].onkeypress = function () {
        //         alert("hello")
        //         alert($(this).val)
        //         if ($(this).val > 2) {
        //             alert("hello")
        //         };

        //     }
        // }
    
    </script>
       
} 
@* if scripts aint closed javascript doesnt work *@

    